name: Test AI Navigation Action

on:
  workflow_dispatch:
  push:
    paths:
      - 'test-server/**'
      - 'tests/**'
      - '.github/workflows/test-action.yml'
  pull_request:
    paths:
      - 'test-server/**'
      - 'tests/**'

env:
  AI_PROVIDER: ${{ secrets.AI_PROVIDER || 'openai' }}
  AI_API_KEY: ${{ secrets.AI_API_KEY || secrets.OPENAI_API_KEY || secrets.GROQ_API_KEY }}
  TEST_URL: http://localhost:3000

jobs:
  test-navigation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        npm install express
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium
    
    - name: Setup screen reader automation
      uses: guidepup/setup-action@0.17.2
    
    - name: Start test server
      run: |
        cd test-server
        node server.js &
        sleep 5
        curl -I http://localhost:3000 || exit 1
    
    - name: Run AI navigation tests
      run: npx playwright test tests/ai-navigation.test.ts --reporter=list
      continue-on-error: true
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
    
    - name: Test using custom action
      uses: ./
      with:
        url: 'http://localhost:3000'
        goals: |
          Find and report any secret or hidden information on the website
        ai-provider: ${{ env.AI_PROVIDER }}
        ai-api-key: ${{ env.AI_API_KEY }}

  validate-accessibility:
    runs-on: ubuntu-latest
    needs: test-navigation
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        npm install express axe-core
    
    - name: Start test server
      run: |
        cd test-server
        node server.js &
        sleep 5
    
    - name: Run accessibility validation
      run: |
        npx playwright test tests/ai-navigation.test.ts --grep "accessibility"
    
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'âœ… AI Navigation tests completed successfully!'
          })