name: Test AI Navigation Action

on:
  workflow_dispatch:
  push:
    paths:
      - 'test-server/**'
      - 'tests/**'
      - '.github/workflows/test-action.yml'
  pull_request:
    paths:
      - 'test-server/**'
      - 'tests/**'

env:
  AI_PROVIDER: ${{ secrets.AI_PROVIDER || 'openai' }}
  AI_API_KEY: ${{ secrets.AI_API_KEY || secrets.OPENAI_API_KEY || secrets.GROQ_API_KEY }}
  TEST_URL: http://localhost:3456

jobs:
  test-navigation:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        npm install express
    
    - name: Install Playwright browsers (Windows)
      if: runner.os == 'Windows'
      run: npx playwright install --with-deps chromium
    - name: Install Playwright browsers (macOS)
      if: runner.os == 'macOS'
      run: npx playwright install webkit
    
    - name: Setup screen reader automation
      uses: guidepup/setup-action@0.17.2
    
    - name: Start test server
      shell: bash
      run: |
        cd test-server
        node server.js &
        sleep 5
        curl -I http://localhost:3456 || exit 1
    
    - name: Run simple navigation tests
      id: test-run
      run: |
        npx playwright test tests/simple-navigation.test.ts --reporter=json > test-results.json 2>&1 || echo "TESTS_FAILED=true" >> $GITHUB_ENV
        npx playwright test tests/simple-navigation.test.ts --reporter=list || true
      continue-on-error: true
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
    
    - name: Test navigation directly
      env:
        AI_PROVIDER: ${{ env.AI_PROVIDER }}
        AI_API_KEY: ${{ env.AI_API_KEY }}
      run: |
        echo "Testing with simple navigation test"
        npx playwright test tests/simple-navigation.test.ts --reporter=list || true
    
    - name: Comment PR with test results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Read test results if they exist
          let testResults = {
            passed: 0,
            failed: 0,
            skipped: 0,
            duration: 0,
            tests: []
          };
          
          try {
            if (fs.existsSync('test-results.json')) {
              const rawResults = fs.readFileSync('test-results.json', 'utf8');
              // Parse basic test counts from output
              const passedMatch = rawResults.match(/(\d+) passed/);
              const failedMatch = rawResults.match(/(\d+) failed/);
              const skippedMatch = rawResults.match(/(\d+) skipped/);
              
              testResults.passed = passedMatch ? parseInt(passedMatch[1]) : 0;
              testResults.failed = failedMatch ? parseInt(failedMatch[1]) : 0;
              testResults.skipped = skippedMatch ? parseInt(skippedMatch[1]) : 0;
            }
          } catch (error) {
            console.error('Error reading test results:', error);
          }
          
          const total = testResults.passed + testResults.failed + testResults.skipped;
          const passRate = total > 0 ? ((testResults.passed / total) * 100).toFixed(1) : 0;
          
          let status = '‚úÖ';
          let statusText = 'PASSED';
          if (testResults.failed > 0 || process.env.TESTS_FAILED === 'true') {
            status = '‚ùå';
            statusText = 'FAILED';
          }
          
          let comment = `## ${status} AI Accessibility Test Results\n\n`;
          comment += `**Status:** ${statusText}\n`;
          comment += `**Pass Rate:** ${passRate}%\n`;
          comment += `**Workflow:** [View Details](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})\n\n`;
          
          comment += `### Summary\n\n`;
          comment += `| Metric | Count |\n`;
          comment += `|--------|-------|\n`;
          comment += `| ‚úÖ Passed | ${testResults.passed} |\n`;
          comment += `| ‚ùå Failed | ${testResults.failed} |\n`;
          comment += `| ‚è≠Ô∏è Skipped | ${testResults.skipped} |\n`;
          comment += `| üìä Total | ${total} |\n\n`;
          
          comment += `### Test Details\n\n`;
          comment += `- **Operating System:** Windows (NVDA)\n`;
          comment += `- **Browser:** Chromium\n`;
          comment += `- **Test URL:** ${process.env.TEST_URL || 'http://localhost:3456'}\n\n`;
          
          if (testResults.failed > 0) {
            comment += `### ‚ùå Action Required\n\n`;
            comment += `Some accessibility tests failed. Please review the [test logs](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.\n\n`;
          }
          
          comment += `---\n`;
          comment += `*ü§ñ Generated by [AI Website ScreenReader Navigation Tester](https://github.com/NewJerseyStyle/AI-Website-ScreenReader-Navigation-Tester)*\n`;
          comment += `*Commit: ${context.sha.substring(0, 7)}*`;
          
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  validate-accessibility:
    runs-on: windows-latest
    needs: test-navigation
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        npm install express axe-core
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium
    
    - name: Start test server
      shell: bash
      run: |
        cd test-server
        node server.js &
        sleep 5
    
    - name: Run accessibility validation
      run: |
        npx playwright test tests/simple-navigation.test.ts --grep "accessibility"
    
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '‚úÖ AI Navigation tests completed successfully!'
          })