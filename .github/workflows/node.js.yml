# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  OPENAI_API_BASE: ${{ vars.OPENAI_API_BASE }}
  GROQ_MODEL: llama-3.3-70b-versatile
  GROQ_MODEL_TEMP: 0
  OPENAI_MODEL: gpt-4
  OPENAI_MODEL_TEMP: 0
  TEST_ENTRY_URL: https://github.com/guidepup/guidepup
  TEST_CASE_JSON_PATH: example-goals.json

jobs:
  build:

    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: npm install
    - name: Install Playwright browsers (Windows)
      if: runner.os == 'Windows'
      run: npx playwright install --with-deps chromium
    - name: Install Playwright browsers (macOS)
      if: runner.os == 'macOS'
      run: npx playwright install webkit
    - name: Set Up Environment For Screen Reader Automation
      uses: guidepup/setup-action@0.17.2
    - name: Start test server
      shell: bash
      run: |
        cd test-server
        node server.js &
        sleep 5
    - name: Run Playwright tests
      id: test-results
      run: |
        npx playwright test tests/simple-navigation.test.ts --reporter=json > test-output.json 2>&1 || echo "TESTS_FAILED=true" >> $GITHUB_ENV
        npx playwright test tests/simple-navigation.test.ts --reporter=list || true
      continue-on-error: true
    
    - name: Post test results to PR
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          let testSummary = {
            passed: 0,
            failed: 0,
            total: 0
          };
          
          try {
            if (fs.existsSync('test-output.json')) {
              const output = fs.readFileSync('test-output.json', 'utf8');
              const passedMatch = output.match(/(\d+) passed/);
              const failedMatch = output.match(/(\d+) failed/);
              
              if (passedMatch) testSummary.passed = parseInt(passedMatch[1]);
              if (failedMatch) testSummary.failed = parseInt(failedMatch[1]);
              testSummary.total = testSummary.passed + testSummary.failed;
            }
          } catch (e) {
            console.error('Error parsing test results:', e);
          }
          
          const status = testSummary.failed === 0 ? '✅' : '❌';
          const passRate = testSummary.total > 0 ? 
            ((testSummary.passed / testSummary.total) * 100).toFixed(1) : 0;
          
          const comment = `## ${status} Accessibility Test Results
          
          **Platform:** Windows with NVDA
          **Browser:** Chromium
          **Pass Rate:** ${passRate}%
          
          | Test Results | Count |
          |--------------|-------|
          | ✅ Passed | ${testSummary.passed} |
          | ❌ Failed | ${testSummary.failed} |
          | 📊 Total | ${testSummary.total} |
          
          [View Full Test Report](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
          
          ---
          *🤖 Automated by AI ScreenReader Navigation Tester*`;
          
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
    - name: Create GitHub Issue on Failure
      if: failure()
      uses: peter-evans/create-issue-from-file@v5
      with:
        title: 'Accessibility Test Failed: ${{ github.event.head_commit.message }}'
        content-filepath: ./issue.md
        labels: bug, accessibility
